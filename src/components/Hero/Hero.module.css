/* Hero Component - Modern CSS + CSS Modules */

.heroSection {
  /* Container queries setup */
  container-type: inline-size;
  
  /* Modern CSS features */
  min-height: 100vh;
  background: var(--gradient-primary);
  position: relative;
  overflow: hidden;
  
  /* CSS nesting - modern syntax */
  & .heroBackground {
      position: absolute;
      inset: 0;
      background: var(--gradient-hero);
      
      &::after {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(
          circle,
          color-mix(in srgb, var(--color-primary) 10%, transparent) 0%,
          transparent 70%
        );
        animation: slowRotate 30s linear infinite;
      }
    }
    
    & .heroContainer {
      position: relative;
      z-index: 10;
      height: 100vh;
      display: grid;
      place-items: center;
      padding: var(--space-2xl);
      
      /* Container query - responsive behavior based on component width */
      @container (min-width: 768px) {
        padding: var(--space-4xl);
        grid-template-columns: 1fr 1fr;
        gap: var(--space-4xl);
        text-align: left;
      }
      
      /* Larger container widths */
      @container (min-width: 1024px) {
        padding: var(--space-5xl);
        gap: var(--space-5xl);
      }
    }
    
    & .heroContent {
      display: flex;
      flex-direction: column;
      align-items: center;
      text-align: center;
      gap: var(--space-xl);
      max-width: 600px;
      
      /* Nested container query */
      @container (min-width: 768px) {
        align-items: flex-start;
        text-align: left;
        max-width: none;
      }
    }
    
    & .heroTitle {
      font-size: clamp(var(--font-size-3xl), 5vw, var(--font-size-5xl));
      font-weight: var(--font-weight-bold);
      line-height: var(--line-height-tight);
      
      /* Advanced gradient text with modern CSS */
      background: var(--gradient-hero-text);
      background-clip: text;
      -webkit-background-clip: text;
      color: transparent;
      
      /* CSS nesting for pseudo-elements */
      &::after {
        content: '';
        display: block;
        width: 100%;
        height: 4px;
        background: var(--gradient-text);
        border-radius: var(--radius-full);
        margin-top: var(--space-md);
        animation: expandLine 1.5s ease-out 0.5s both;
      }
    }
    
    & .heroSubtitle {
      font-size: clamp(var(--font-size-lg), 2.5vw, var(--font-size-2xl));
      line-height: var(--line-height-relaxed);
      font-weight: var(--font-weight-normal);
      
      /* Apply same gradient as the title for consistent styling */
      background: var(--gradient-hero-text);
      background-clip: text;
      -webkit-background-clip: text;
      color: transparent;

    }
    
    & .heroActions {
      display: flex;
      gap: var(--space-lg);
      flex-wrap: wrap;
      justify-content: center;
      
      @container (min-width: 768px) {
        justify-content: flex-start;
      }
    }
    
    & .ctaButton {
      display: inline-flex;
      align-items: center;
      gap: var(--space-sm);
      padding: var(--space-lg) var(--space-2xl);
      border-radius: var(--radius-xl);
      font-size: var(--font-size-lg);
      font-weight: var(--font-weight-semibold);
      text-decoration: none;
      transition: all var(--transition-normal);
      cursor: pointer;
      border: 2px solid transparent;
      
      /* Primary button variant */
      &.primary {
        background: var(--color-primary);
        color: var(--color-hero-text) !important;
        border-color: var(--color-primary);
        backdrop-filter: blur(10px);
        box-shadow: 0 4px 15px var(--color-hero-shadow-primary);
        
        &:hover {
          background: var(--color-primary-dark);
          border-color: var(--color-primary-dark);
          color: var(--color-hero-text) !important;
          transform: translateY(-2px);
          box-shadow: 0 8px 25px var(--color-hero-shadow-primary-hover);
        }
        
        &:active {
          transform: translateY(0);
          color: var(--color-hero-text) !important;
          box-shadow: 0 2px 10px var(--color-hero-shadow-primary);
        }
      }
      
      /* Secondary button variant */
      &.secondary {
        background: transparent;
        color: var(--color-hero-text) !important;
        border-color: var(--color-hero-overlay-light);
        backdrop-filter: blur(10px);
        box-shadow: 0 4px 15px var(--color-hero-shadow-white);
        
        &:hover {
          background: var(--color-white-alpha);
          border-color: var(--color-hero-overlay-light-hover);
          color: var(--color-hero-text) !important;
          transform: translateY(-2px);
          box-shadow: 0 8px 25px var(--color-hero-shadow-white-hover);
        }
        
        &:active {
          transform: translateY(0);
          color: var(--color-hero-text) !important;
          box-shadow: 0 2px 10px var(--color-hero-shadow-white);
        }
      }
      
      /* Focus states using modern CSS */
      &:focus-visible {
        outline: none;
        box-shadow: 0 0 0 3px var(--color-hero-focus-ring);
      }
    }
    
    & .heroVisual {
      display: none;
      
      /* Only show on larger containers */
      @container (min-width: 768px) {
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
      }
      
      & .visualElement {
        width: 400px;
        height: 400px;
        display: grid;
        place-items: center;
        position: relative;
        
        & .techOrbit {
          position: relative;
          width: 300px;
          height: 300px;
          display: flex;
          align-items: center;
          justify-content: center;
        }
        
        & .centerSymbol {
          position: absolute;
          display: flex;
          align-items: center;
          justify-content: center;
          width: 70px;
          height: 70px;
          background: radial-gradient(circle at 30% 30%, 
            var(--color-hero-glow-primary), 
            var(--color-hero-glow-secondary), 
            var(--color-hero-glow-tertiary)
          );
          backdrop-filter: blur(15px);
          border: 2px solid var(--color-hero-border-primary);
          border-radius: 50%;
                      color: var(--color-hero-text-primary);
          animation: globePulse 4s ease-in-out infinite;
          
          & svg {
            filter: drop-shadow(0 3px 12px var(--color-primary-heavy-alpha-4));
          }
          
          &::before {
            content: '';
            position: absolute;
            inset: -4px;
            border-radius: 50%;
            background: linear-gradient(45deg, 
              var(--color-primary-heavy-alpha-3),
              transparent,
              var(--color-primary-heavy-alpha-2)
            );
            z-index: -1;
            animation: borderRotate 8s linear infinite;
          }
          
          &::after {
            content: '';
            position: absolute;
            inset: 6px;
            border-radius: 50%;
            background: radial-gradient(circle at 25% 25%, 
              var(--color-primary-heavy-alpha-2), 
              transparent 50%
            );
            z-index: -1;
            animation: innerGlow 3s ease-in-out infinite alternate;
          }
        }
        
        & .techIcon {
          position: absolute;
          display: flex;
          flex-direction: column;
          align-items: center;
          gap: var(--space-xs);
          color: var(--color-hero-text);
          animation: orbit var(--orbit-duration, 20s) linear infinite;
          z-index: var(--z-index, 1);
          
          /* Position icons in orbit */
          left: 50%;
          top: 50%;
          transform-origin: 0 0;
          transform: 
            translate(-50%, -50%) 
            rotate(var(--start-angle, 0deg)) 
            translateX(var(--orbit-radius, 100px)) 
            rotate(calc(-1 * var(--start-angle, 0deg)));
          
          & svg {
            width: clamp(28px, 5vw, 36px);
            height: clamp(28px, 5vw, 36px);
            transition: all var(--transition-normal);
            filter: drop-shadow(0 2px 8px var(--color-hero-shadow-drop));
          }
          
          &:hover {
            color: var(--color-hero-text-secondary);
            transform: 
              translate(-50%, -50%) 
              rotate(var(--start-angle, 0deg)) 
              translateX(var(--orbit-radius, 100px)) 
              rotate(calc(-1 * var(--start-angle, 0deg)))
              scale(1.2);
            
            & .techLabel {
              opacity: 1;
              transform: translateY(0);
            }
          }
          
          /* Technology-specific colors */
          &[data-tech="react"] {
            color: var(--color-react);
          }
          
          &[data-tech="vue"] {
            color: var(--color-vue);
          }
          
          &[data-tech="typescript"] {
            color: var(--color-typescript);
          }
          
          &[data-tech="javascript"] {
            color: var(--color-javascript);
          }
          
          &[data-tech="css"] {
            color: var(--color-css);
          }
          
          &[data-tech="vite"] {
            color: var(--color-vite);
          }
        }
        
        & .techLabel {
          font-size: var(--font-size-xs);
          font-weight: var(--font-weight-semibold);
          opacity: 0;
          transform: translateY(4px);
          transition: all var(--transition-normal);
          white-space: nowrap;
          text-shadow: 0 1px 2px var(--color-hero-text-shadow);
        }
      }
    }
    
    & .scrollIndicator {
      position: absolute;
      bottom: var(--space-2xl);
      left: 50%;
      transform: translateX(-50%);
      color: var(--color-hero-text-secondary);
      font-size: var(--font-size-sm);
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--space-sm);
      animation: bounce 2s infinite;
      
      &::after {
        content: '↓';
        font-size: var(--font-size-lg);
      }
    }
  }

/* Animations using modern CSS */
@keyframes slowRotate {
  from { 
    transform: rotate(0deg); 
  }
  to { 
    transform: rotate(360deg); 
  }
}

@keyframes expandLine {
  from { 
    width: 0; 
    opacity: 0; 
  }
  to { 
    width: 100%; 
    opacity: 1; 
  }
}

@keyframes orbit {
  from {
    transform: 
      translate(-50%, -50%) 
      rotate(var(--start-angle, 0deg)) 
      translateX(var(--orbit-radius, 100px)) 
      rotate(calc(-1 * var(--start-angle, 0deg)));
  }
  to {
    transform: 
      translate(-50%, -50%) 
      rotate(calc(var(--start-angle, 0deg) + 360deg)) 
      translateX(var(--orbit-radius, 100px)) 
      rotate(calc(-1 * (var(--start-angle, 0deg) + 360deg)));
  }
}

@keyframes globePulse {
  0%, 100% {
    transform: scale(1);
              box-shadow: 0 0 25px var(--color-primary-heavy-alpha-4),
                      0 0 50px var(--color-primary-heavy-alpha-2);
  }
  50% {
    transform: scale(1.03);
          box-shadow: 0 0 35px var(--color-primary-heavy-alpha-5),
                  0 0 70px var(--color-primary-heavy-alpha-3);
  }
}

@keyframes innerGlow {
  0% { 
    opacity: 0.4;
  }
  100% { 
    opacity: 0.7;
  }
}

@keyframes borderRotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateX(-50%) translateY(0);
  }
  40% {
    transform: translateX(-50%) translateY(-10px);
  }
  60% {
    transform: translateX(-50%) translateY(-5px);
  }
}

/* Pause animations on hover for better UX */
.techOrbit:hover .techIcon {
  animation-play-state: paused;
}

/* Responsive adjustments for very small containers */
@container (max-width: 480px) {
  .heroContainer {
    padding: var(--space-lg) !important;
  }
  
  .heroActions {
    flex-direction: column;
    width: 100%;
    
    & .ctaButton {
      justify-content: center;
      width: 100%;
    }
  }
  
  /* Optimize tech orbit for mobile - reduce to single orbit */
  .techOrbit {
    width: 160px !important;
    height: 160px !important;
  }
  
  .techIcon {
    /* Use single orbit radius on mobile to prevent overlap */
    --orbit-radius: 60px !important;
    
    & svg {
      width: 24px !important;
      height: 24px !important;
    }
  }
}

/* Slower animations on mobile for better battery/performance */
.techIcon {
  animation-duration: 40s !important;
}